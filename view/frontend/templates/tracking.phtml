<?php
/** @var Clerk\Clerk\Block\Tracking $block */
if (!empty($block->getPublicKey())):
    $clerkJsUrl = $block->getClerkJSLink();
    ?>
    <!-- Start of Clerk.io E-commerce Personalisation tool - www.clerk.io -->
    <script>
        (function (w, d) {
            var e = d.createElement('script');
            e.type = 'text/javascript';
            e.async = true;
            e.src = (d.location.protocol == 'https:' ? 'https' : 'http') + '<?php echo $clerkJsUrl; ?>';
            var s = d.getElementsByTagName('script')[0];
            s.parentNode.insertBefore(e, s);
            w.__clerk_q = w.__clerk_q || [];
            w.Clerk = w.Clerk || function () {
                w.__clerk_q.push(arguments)
            };
        })(window, document);

        Clerk('config', {
            key: '<?php echo $block->escapeJsQuote($block->getPublicKey()); ?>',
            collect_email: <?php echo $block->getCollectionEmails(); ?>,
            <?php
            $current_language = is_null($block->getLanguage()) ? 'False' : $block->getLanguage();
            if (strpos($current_language, 'auto_') === false && $block->getLanguage() != "") {
                echo "language: '" . $block->escapeJsQuote($block->getLanguage()) . "',";
            }
            ?>
            globals: {
                uenc: '<?php echo base64_encode((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[SERVER_NAME]$_SERVER[REQUEST_URI]"); ?>',
                formkey: '<?php echo $block->getFormKey(); ?>',
                currency_symbol: '<?php echo $block->getCurrentCurrencySymbol(); ?>',
                currency_iso: '<?php echo $block->getCurrentCurrencyCode(); ?>'
            },
            formatters: {
                convert_currency: function (price) {
                    const ex_rate = parseFloat('<?php print_r($block->getCurrentCurrencyRate()); ?>') ?? null;
                    if (ex_rate) {
                        return price * ex_rate;
                    }
                    return price;
                },
                convert_currency_from_iso: function (price, currency_iso) {
                    const ex_rates = JSON.parse('<?php echo json_encode($block->getAllCurrencyRates()); ?>');
                    if (ex_rates[currency_iso] !== undefined) {
                        return price * ex_rates[currency_iso];
                    }
                    return price;
                }
            }
        });

        <?php
        if ($block->getCollectionEmails(true) && $block->getCustomerEmail()) {
        ?>
        if (typeof window.Clerk == 'function') {
            Clerk('call', 'log/email', {
                email: "<?php echo $block->getCustomerEmail() ?>"
            });
        }
        <?php
        }
        ?>



        var collectbaskets = <?php echo $block->getCollectionBaskets(); ?>;

        if (collectbaskets) {

            let open = XMLHttpRequest.prototype.open;
            XMLHttpRequest.prototype.open = function () {
                this.addEventListener("load", function () {

                    if (this.responseURL.includes("=cart")) {

                        if (this.readyState === 4 && this.status === 200) {
                            var response = JSON.parse(this.responseText);

                            var clerk_productids = [];
                            if (response && response.hasOwnProperty('cart') && response.cart.hasOwnProperty('items')) {
                                for (var i = 0, len = response.cart.items.length; i < len; i++) {
                                    clerk_productids.push(response.cart.items[i].product_id);
                                }
                            }

                            clerk_productids = clerk_productids.map(Number);
                            var clerk_last_productids = [];
                            if (localStorage.getItem('clerk_productids') !== null) {
                                clerk_last_productids = localStorage.getItem('clerk_productids').split(",");
                                clerk_last_productids = clerk_last_productids.map(Number);
                            }
                            clerk_productids = clerk_productids.sort((a, b) => a - b);
                            clerk_last_productids = clerk_last_productids.sort((a, b) => a - b);
                            if (JSON.stringify(clerk_productids) == JSON.stringify(clerk_last_productids)) {
                                // if equal - do nothing
                            } else {
                                if (JSON.stringify(clerk_productids) === "[0]") {
                                    Clerk('cart', 'set', []);
                                } else {
                                    Clerk('cart', 'set', clerk_productids);
                                }
                            }
                            localStorage.setItem("clerk_productids", clerk_productids);
                        }
                    }

                    if (this.responseURL.includes("/cart/add/")) {
                        if (this.readyState === 4 && this.status === 200) {
                            const urlParts = this.responseURL.split('/');
                            const product_id = urlParts[urlParts.length - 2];
                            Clerk('basket', 'add', product_id);
                        }
                    }

                }, false);
                open.apply(this, arguments);
            };

        }

    </script>
    <!-- End of Clerk.io E-commerce Personalisation tool - www.clerk.io -->
<?php
endif;
?>
